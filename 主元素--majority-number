给定一个整型数组，找出主元素，它在数组中的出现次数严格大于数组元素个数的二分之一。
样例
给出数组[1,1,1,1,2,2,2]，返回 1

挑战
要求时间复杂度为O(n)，空间复杂度为O(1)

public class Solution {
    /**
     * @param nums: a list of integers
     * @return: find a  majority number
     */
    public int majorityNumber(ArrayList<Integer> nums) {
        int count = 0,target = -1;
        for(int i = 0;i < nums.size();i++){
            if(count == 0){
                target = nums.get(i);
                count = 1;
            }else if(target == nums.get(i)){
                count ++;
            }else{
                count --;
            }
        }
        return target;
    }
}

